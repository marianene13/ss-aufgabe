# Any variables like $PORT or ${PORT} will be replaced at start time with container env variables.
# Use  ${D} instead of $ in this template to keep it in nginx.conf
# See more https://serverfault.com/a/755541

worker_processes 4;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    client_max_body_size 25M;
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 15;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    types {
        text/x-yaml yaml yml;
    }
    default_type application/octet-stream;
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types application/json text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript;
    gzip_disable "MSIE [1-6]\.";
    open_file_cache max=100;

    log_format json_combined escape=json
      '{'
        '"method":"${D}request_method", '
        '"status": "${D}status", '
        '"uri":"${D}request_uri", '
        '"host":"${D}host", '
        '"bytes_sent":${D}body_bytes_sent, '
        '"request_length":${D}request_length, '
        '"remote_addr":"${D}remote_addr", '
        '"remote_user":"${D}remote_user", '
        '"http_x_forwarded_for":"${D}http_x_forwarded_for", '
        '"content_type_sent":"${D}upstream_http_content_type", '
        '"origin":"${D}http_origin", '
        '"referrer":"${D}http_referer", '
        '"user_agent":"${D}http_user_agent", '
        '"accept_language":"${D}http_accept_language", '
        '"x_request_id":"${D}http_x_request_id", '
        '"x_respose_id":"${D}upstream_http_x_respose_id", '
        '"request_time":"${D}request_time", '
        '"upstream_connect_time":"${D}upstream_connect_time", '
        '"upstream_response_time":"${D}upstream_response_time", '
        '"time_local":"${D}time_iso8601", '
        '"extra":{"unique_id":"${D}request_id"} '
      '}';

    access_log ${LOG_FORMAT};
    error_log /dev/stdout;

    upstream app_servers {
        server ${PHP_HOST}:9000;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        if (${D}http_x_forwarded_proto = 'http') {
            return 301 https://${D}host${D}request_uri;
        }

        root ${PHP_PATH};

        location / {
            try_files ${D}uri /index.php${D}is_args${D}args;
        }

        location ~ ^/index\.php(/|${D}) {
            fastcgi_pass app_servers;
            fastcgi_split_path_info ^(.+\.php)(/.*)${D};
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME ${D}realpath_root${D}fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT ${D}realpath_root;
            fastcgi_param HTTP_X_REQUEST_ID ${D}request_id;
            internal;
        }

        location ~ \.php${D} {
          return 404;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://127.0.0.1:80;

            proxy_set_header Host ${D}host;
            proxy_set_header X-Real-IP ${D}remote_addr;
            proxy_set_header X-Forwarded-For ${D}proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto ${D}scheme;
            proxy_set_header X-Request-Id ${D}request_id;
        }
    }
}
